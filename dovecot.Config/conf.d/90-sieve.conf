##
## Settings for the Sieve interpreter
## 

# Do not forget to enable the Sieve plugin in 15-lda.conf and 20-lmtp.conf
# by adding it to the mail_plugins= settings.

plugin {
  # The path to the user's main active script. 
  sieve = /Library/Server/Mail/Data/rules/%u/dovecot.sieve

  # A path to a global sieve script file, which gets executed ONLY
  # if user's private Sieve script doesn't exist. Be sure to 
  # pre-compile this script manually using the sievec command line 
  # tool.
  #sieve_global_path = /var/lib/dovecot/sieve/default.sieve

  # Directory for :personal include scripts for the include extension. 
  sieve_dir = /Library/Server/Mail/Data/rules/%u

  # Directory for :global include scripts for the include extension. 
  #sieve_global_dir =

  # Which Sieve language extensions are available to users. By default,
  # all supported extensions are available, except for deprecated
  # extensions or those that are still under development. Some system
  # administrators may want to disable certain Sieve extensions or 
  # enable those that are not available by default. This setting can 
  # use '+' and '-' to specify differences relative to the default. 
  # For example `sieve_extensions = +imapflags' will enable the 
  # deprecated imapflags extension in addition to all extensions 
  # enabled by default. 
  #sieve_extensions = +notify +imapflags

  # The separator that is expected between the :user and :detail 
  # address parts introduced by the subaddress extension. This may 
  # also be a sequence of characters (e.g. '--'). The current 
  # implementation looks for the separator from the left of the 
  # localpart and uses the first one encountered. The :user part is 
  # left of the separator and the :detail part is right. This setting
  # is also used by Dovecot's LMTP service.
  #recipient_delimiter = +

  # Path to a script file or a directory containing script files that need to be
  # executed before the user's script. If the path points to a directory, all the
  # Sieve scripts contained therein (with the proper '.sieve' extension) are
  # executed. The order of execution is determined by the file names, using a
  # normal 8bit per-character comparison.
  #sieve_before =

  # Identical to 'sieve_before', only the specified scripts are executed after
  # the user's script (only when keep is still in effect!).
  #sieve_after =
}
